#include "common.hpp"

class tetris
{

public:
    tetris();

    ~tetris();

    void tick();

private:
    struct piece
    {
        uint8_t orientation{0};
        uint8_t subpixel{0};
        square type;
        ivec2 pos{0, 3};

        static constexpr ivec2 lut[7][4][4] = {
            // I piece
            {
                {{1, 0}, {1, 1}, {1, 2}, {1, 3}},
                {{0, 2}, {1, 2}, {2, 2}, {3, 2}},
                {{1, 0}, {1, 1}, {1, 2}, {1, 3}},
                {{0, 2}, {1, 2}, {2, 2}, {3, 2}},
            },
            // J piece
            {
                {{1, 0}, {1, 1}, {1, 2}, {2, 2}},
                {{0, 1}, {0, 2}, {1, 1}, {2, 1}},
                {{1, 0}, {2, 0}, {2, 1}, {2, 2}},
                {{0, 1}, {1, 1}, {2, 0}, {2, 1}},
            },
            // L piece
            {
                {{1, 0}, {1, 1}, {1, 2}, {2, 0}},
                {{0, 1}, {1, 1}, {2, 1}, {2, 2}},
                {{1, 2}, {2, 0}, {2, 1}, {2, 2}},
                {{0, 0}, {0, 1}, {1, 1}, {2, 1}},
            },
            // O piece
            {
                {{1, 1}, {1, 2}, {2, 1}, {2, 2}},
                {{1, 1}, {1, 2}, {2, 1}, {2, 2}},
                {{1, 1}, {1, 2}, {2, 1}, {2, 2}},
                {{1, 1}, {1, 2}, {2, 1}, {2, 2}},
            },
            // S piece
            {
                {{1, 1}, {1, 2}, {2, 0}, {2, 1}},
                {{0, 0}, {1, 0}, {1, 1}, {2, 1}},
                {{1, 1}, {1, 2}, {2, 0}, {2, 1}},
                {{0, 0}, {1, 0}, {1, 1}, {2, 1}},
            },
            // T piece
            {
                {{1, 0}, {1, 1}, {1, 2}, {2, 1}},
                {{0, 1}, {1, 1}, {1, 2}, {2, 1}},
                {{1, 1}, {2, 0}, {2, 1}, {2, 2}},
                {{0, 1}, {1, 0}, {1, 1}, {2, 1}},
            },
            // Z piece
            {
                {{1, 0}, {1, 1}, {2, 1}, {2, 2}},
                {{0, 2}, {1, 1}, {1, 2}, {2, 1}},
                {{1, 0}, {1, 1}, {2, 1}, {2, 2}},
                {{0, 2}, {1, 1}, {1, 2}, {2, 1}},
            },
        };

        void tick(uint16_t g);

        void move_left();

        void move_right();

        void rotate_left();

        void rotate_right();
    };

    board_t board;
    uint32_t clock;
};